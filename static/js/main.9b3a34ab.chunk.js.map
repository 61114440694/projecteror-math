{"version":3,"sources":["logo.svg","Work/Main.js","Work/Ex1.js","Work/Ex2.js","Work/Ex3.js","Work/Ex4.js","Work/Ex5.js","Work/Ex6.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Main","className","src","logo","alt","href","target","rel","Ex1","Component","Ex2","Ex3","Ex4","Ex5","Ex6","routes","path","element","App","router","useRoutes","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sFAAAA,EAAOC,QAAU,IAA0B,kC,mKCyC5BC,MArCf,WAGE,OACE,yBAAKC,UAAU,OACb,4BAAQA,UAAU,cAChB,yBAAKC,IAAKC,IAAMF,UAAU,WAAWG,IAAI,SACzC,iEACqC,6BADrC,sCAGW,uBAAGC,KAAK,SAAR,SAAyB,6BAHpC,sCAKW,uBAAGA,KAAK,SAAR,SAAyB,6BALpC,sCAOW,uBAAGA,KAAK,SAAR,SAAyB,6BAPpC,sCASW,uBAAGA,KAAK,SAAR,SAAyB,6BATpC,sCAWW,uBAAGA,KAAK,SAAR,SAAyB,6BAXpC,sCAaW,uBAAGA,KAAK,SAAR,SAAyB,8BAGpC,uBACEJ,UAAU,WACVI,KAAK,qBACLC,OAAO,SACPC,IAAI,uBAJN,4B,4BCPOC,E,uKAfP,OAAQ,6BACJ,gCACA,qCACA,sCACA,uCACA,0CACA,2CACA,4CACA,6CACA,qD,GAXMC,aCiBHC,E,uKAfP,OAAQ,6BACJ,gCACA,qCACA,sCACA,uCACA,0CACA,2CACA,4CACA,6CACA,qD,GAXMD,aCiBHE,E,uKAfP,OAAQ,6BACJ,gCACA,qCACA,sCACA,uCACA,0CACA,2CACA,4CACA,6CACA,qD,GAXMF,aCiBHG,E,uKAfP,OAAQ,6BACJ,gCACA,qCACA,sCACA,uCACA,0CACA,2CACA,4CACA,6CACA,qD,GAXMH,aCiBHI,E,uKAfP,OAAQ,6BACJ,gCACA,qCACA,sCACA,uCACA,0CACA,2CACA,4CACA,6CACA,qD,GAXMJ,aCiBHK,E,uKAfP,OAAQ,6BACJ,gCACA,qCACA,sCACA,uCACA,0CACA,2CACA,4CACA,6CACA,qD,GAXML,aC6DHM,EApDA,CAEX,CACIC,KAAM,IACNC,QAAS,kBAAC,EAAD,OAEb,CACID,KAAM,QACNC,QAAS,kBAAC,EAAD,OAEb,CACED,KAAM,oBACNC,QAAS,kBAAC,EAAD,OAIX,CACED,KAAM,OACNC,QAAS,kBAAC,EAAD,OAIX,CACID,KAAM,OACNC,QAAS,kBAAC,EAAD,OAIX,CACED,KAAM,OACNC,QAAS,kBAAC,EAAD,OAIX,CACED,KAAM,OACNC,QAAS,kBAAC,EAAD,OAIX,CACED,KAAM,OACNC,QAAS,kBAAC,EAAD,OAIX,CACED,KAAM,OACNC,QAAS,kBAAC,EAAD,Q,OChDFC,G,MALH,WACZ,IAAMC,EAASC,YAAUL,GACvB,OAAO,6BAAMI,K,OCGKE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCTNC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.9b3a34ab.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React from 'react';\r\nimport logo from '../logo.svg';\r\nimport '../App.css';\r\n\r\nfunction Main() {\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit src/App.js and save to reload.<br/>\r\n         \r\n         บทที่ 1 : <a href=\"/ex1/\">Click</a><br/>\r\n        \r\n         บทที่ 2 : <a href=\"/ex2/\">Click</a><br/>\r\n         \r\n         บทที่ 3 : <a href=\"/ex3/\">Click</a><br/>\r\n              \r\n         บทที่ 4 : <a href=\"/ex4/\">Click</a><br/>\r\n         \r\n         บทที่ 5 : <a href=\"/ex5/\">Click</a><br/>\r\n         \r\n         บทที่ 6 : <a href=\"/ex6/\">Click</a><br/>\r\n\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://google.com\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React to Google\r\n        </a>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Main;\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { Switch } from 'react-router-dom'\r\n\r\nclass Ex1 extends Component {\r\n    render() {\r\n        return (<div>\r\n            <center>\r\n            <h1> Ir  </h1>\r\n            <h1> Amrr </h1>\r\n            <h1> Lerrr </h1>\r\n            <h1> genderrr </h1>\r\n            <h1> genderrrr </h1>\r\n            <h1> genderrrrr </h1>\r\n            <h1> genderrrrrr </h1>\r\n            <h1> genderaaaaaaa </h1>\r\n            </center>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default Ex1","import React, { Component } from 'react'\r\nimport { Switch } from 'react-router-dom'\r\n\r\nclass Ex2 extends Component {\r\n    render() {\r\n        return (<div>\r\n            <center>\r\n            <h1> Ir  </h1>\r\n            <h1> Amrr </h1>\r\n            <h1> Lerrr </h1>\r\n            <h1> genderrr </h1>\r\n            <h1> genderrrr </h1>\r\n            <h1> genderrrrr </h1>\r\n            <h1> genderrrrrr </h1>\r\n            <h1> genderaaaaaaa </h1>\r\n            </center>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default Ex2","import React, { Component } from 'react'\r\nimport { Switch } from 'react-router-dom'\r\n\r\nclass Ex3 extends Component {\r\n    render() {\r\n        return (<div>\r\n            <center>\r\n            <h1> Ir  </h1>\r\n            <h1> Amrr </h1>\r\n            <h1> Lerrr </h1>\r\n            <h1> genderrr </h1>\r\n            <h1> genderrrr </h1>\r\n            <h1> genderrrrr </h1>\r\n            <h1> genderrrrrr </h1>\r\n            <h1> genderaaaaaaa </h1>\r\n            </center>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default Ex3","import React, { Component } from 'react'\r\nimport { Switch } from 'react-router-dom'\r\n\r\nclass Ex4 extends Component {\r\n    render() {\r\n        return (<div>\r\n            <center>\r\n            <h1> Ir  </h1>\r\n            <h1> Amrr </h1>\r\n            <h1> Lerrr </h1>\r\n            <h1> genderrr </h1>\r\n            <h1> genderrrr </h1>\r\n            <h1> genderrrrr </h1>\r\n            <h1> genderrrrrr </h1>\r\n            <h1> genderaaaaaaa </h1>\r\n            </center>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default Ex4","import React, { Component } from 'react'\r\nimport { Switch } from 'react-router-dom'\r\n\r\nclass Ex5 extends Component {\r\n    render() {\r\n        return (<div>\r\n            <center>\r\n            <h1> Ir  </h1>\r\n            <h1> Amrr </h1>\r\n            <h1> Lerrr </h1>\r\n            <h1> genderrr </h1>\r\n            <h1> genderrrr </h1>\r\n            <h1> genderrrrr </h1>\r\n            <h1> genderrrrrr </h1>\r\n            <h1> genderaaaaaaa </h1>\r\n            </center>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default Ex5","import React, { Component } from 'react'\r\nimport { Switch } from 'react-router-dom'\r\n\r\nclass Ex6 extends Component {\r\n    render() {\r\n        return (<div>\r\n            <center>\r\n            <h1> Ir  </h1>\r\n            <h1> Amrr </h1>\r\n            <h1> Lerrr </h1>\r\n            <h1> genderrr </h1>\r\n            <h1> genderrrr </h1>\r\n            <h1> genderrrrr </h1>\r\n            <h1> genderrrrrr </h1>\r\n            <h1> genderaaaaaaa </h1>\r\n            </center>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default Ex6","import React from \"react\";\r\nimport Main from \"./Work/Main\";\r\n\r\n\r\nimport Ex1 from \"./Work/Ex1\";\r\nimport Ex2 from \"./Work/Ex2\";\r\nimport Ex3 from \"./Work/Ex3\";\r\nimport Ex4 from \"./Work/Ex4\";\r\nimport Ex5 from \"./Work/Ex5\";\r\nimport Ex6 from \"./Work/Ex6\";\r\n\r\n\r\nconst routes = [\r\n\r\n    {\r\n        path: \"/\",\r\n        element: <Main />,\r\n      },\r\n    {\r\n        path: \"/main\",\r\n        element: <Main />,\r\n      },\r\n    {\r\n      path: \"/projecteror-math\",\r\n      element: <Main />,\r\n    },\r\n\r\n\r\n    {\r\n      path: \"/Ex1\",\r\n      element: <Ex1 />,\r\n    },\r\n\r\n\r\n    {\r\n        path: \"/Ex2\",\r\n        element: <Ex2 />,\r\n      },\r\n\r\n\r\n      {\r\n        path: \"/Ex3\",\r\n        element: <Ex3 />,\r\n      },\r\n\r\n\r\n      {\r\n        path: \"/Ex4\",\r\n        element: <Ex4 />,\r\n      },\r\n\r\n\r\n      {\r\n        path: \"/Ex5\",\r\n        element: <Ex5 />,\r\n      },\r\n\r\n\r\n      {\r\n        path: \"/Ex6\",\r\n        element: <Ex6 />,\r\n      }\r\n  ];\r\n\r\nexport default routes;","import React from 'react';\r\nimport './App.css';\r\nimport routes from \"./routes\";\r\nimport { useRoutes } from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst App = () => {\r\nconst router = useRoutes(routes);\r\n  return <div>{router}</div>;\r\n};\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}